[{"categories":[],"date":"2024-11-28T10:05:01+08:00","id":"/posts/untangling-the-web/","keywords":[],"summary":"\u003cp\u003eIn the dim light of the office, long after most of the team had left,\nI found myself deep in conversation with my senior. We were hunched over\na whiteboard, markers in hand, surrounded by a chaotic array of boxes\nand arrows that represented our project’s folder structure.\u003c/p\u003e\n\u003cp\u003eMonths ago, we had enthusiastically crafted this structure, believing it\nwas the blueprint for success. But as time passed, reality set in. Our\nonce-promising structure had become a tangled web, tightly coupling\ncomponents and making even the smallest changes a Herculean task.\u003c/p\u003e","tags":[],"title":"Untangling the Web"},{"categories":[],"date":"2024-11-24T20:11:02+08:00","id":"/posts/perfect-yet-impractical/","keywords":[],"summary":"\u003cp\u003e\u003cimg src=\"/bubble-tea.png\" alt=\"bubble tea\"\u003e\u003c/p\u003e\n\u003cp\u003eIn a bustling tech startup called KathTech Inc. \u003cem\u003e(not the real name)\u003c/em\u003e,\nour team was working on a highly anticipated app—one that was meant\nto revolutionize the way people ordered bubble tea \u003cem\u003e(not a real app)\u003c/em\u003e.\nEach of us brought unique ideas to the table, but there was one person\nwho stood out: Adrian the Architect. Known for his brilliant mind,\nAdrian had a reputation for coming up with ideal, flawless technical\nsolutions. The kind of solutions that made you go, “Wow, that’s\ngenius!” —until you realized they would take three years to build.\u003c/p\u003e","tags":[],"title":"The Tale of the Perfect Yet Impractical Solution"},{"categories":[],"date":"2024-11-22T22:08:02+08:00","id":"/posts/sentinel-error/","keywords":[],"summary":"\u003cp\u003eI was working on a project where I need to check on certain errors that return\nfrom a deep, deep function.\u003c/p\u003e\n\u003cp\u003eThe deepest function was calling a third party API. Fortunately, the third party\npackage that I was using is pretty following \u0026lsquo;single responsibility principle\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eAh, this is great! Since the function purpose is to wait until some capacity is\nready on the provider side, I can just check on the error the function returns.\u003c/p\u003e","tags":[],"title":"Sentinel Error"},{"categories":[],"date":"2024-11-22T21:54:01+08:00","id":"/posts/using-singleton-in-go/","keywords":[],"summary":"\u003cp\u003e\u003cimg src=\"/image.png\" alt=\"alt text\"\u003e\u003c/p\u003e\n\u003cp\u003eWhen I was starting to learn Go, I was passing around the instance to access the\nproperty of that instance. This is how I do it:\u003c/p\u003e\n\u003cfigure class=\"codeblock not-prose relative scroll-mt-8\" id=\"codeblock-01\"\u003e\n  \u003caside\n    class=\"absolute right-0 top-0 hidden rounded-bl-sm rounded-tr-sm bg-white/10 px-2 py-1 text-white/70 transition-opacity md:inline-block\"\n  \u003e\n    \u003cdiv class=\"codeblock-meta flex max-w-xs flex-row items-center space-x-3\"\u003e\n      \u003cdiv class=\"small-caps shrink cursor-default truncate font-mono text-xs\" aria-hidden=\"true\"\u003e\n        \u003cspan class=\"relative\"\u003ego\u003c/span\u003e\n      \u003c/div\u003e\n      \u003cdiv\u003e\n        \u003cclipboard-copy\n          type=\"button\"\n          aria-label=\"Copy code to clipboard\"\n          title=\"Copy code to clipboard\"\n          class=\"block cursor-pointer transition-colors hover:text-sky-400\"\n          target=\"#codeblock-01 code\"\n        \u003e\n          \u003csvg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  fill=\"none\"\n  stroke=\"currentColor\"\n  stroke-width=\"2\"\n  stroke-linecap=\"round\"\n  stroke-linejoin=\"round\"\n  class=\"lucide lucide-clipboard h-4 w-4\"\n  viewBox=\"0 0 24 24\"\n\u003e\n  \u003crect width=\"8\" height=\"4\" x=\"8\" y=\"2\" rx=\"1\" ry=\"1\" /\u003e\n  \u003cpath d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\" /\u003e\n\u003c/svg\u003e\n\n        \u003c/clipboard-copy\u003e\n      \u003c/div\u003e\n      \u003cdiv\u003e\n        \u003ca\n          href=\"#codeblock-01\"\n          class=\"block\"\n          aria-label=\"Link to this code block\"\n          title=\"Link to this code block\"\n        \u003e\n          \u003csvg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"16\"\n  height=\"16\"\n  fill=\"none\"\n  stroke=\"currentColor\"\n  stroke-linecap=\"round\"\n  stroke-linejoin=\"round\"\n  stroke-width=\"2\"\n  class=\"lucide lucide-link w-4 h-4 block\"\n  viewBox=\"0 0 24 24\"\n\u003e\n  \u003cpath d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\" /\u003e\n  \u003cpath d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\" /\u003e\n\u003c/svg\u003e\n\n        \u003c/a\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  \u003c/aside\u003e\n  \u003cp class=\"sr-only\"\u003ego code snippet start\u003c/p\u003e","tags":[],"title":"Using Singleton in Go"},{"categories":[],"date":"2024-11-22T21:36:14+08:00","id":"/posts/notes-about-singleton/","keywords":[],"summary":"\u003cp\u003eI’ve been reading that singleton is an anti-pattern but it helps when I want to\nconnect to a DB instance.\u003c/p\u003e\n\u003cp\u003eThere are so many thoughts. For starters, the above is a very generic statement.\nSome languages rely on singletons, and some languages don’t support them at all.\nI think that everything has a place. And as long as the consequences of doing a\nthing are understood, and acceptable, then it is ok to do the thing.\u003c/p\u003e","tags":[],"title":"Notes About Singleton"}]
